// ============================================================================
// Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ============================================================================
package com.braintribe.model.processing.query.parser.api;

import java.util.List;

import com.braintribe.model.generic.reflection.EntityType;
import com.braintribe.model.generic.reflection.EntityTypes;

/**
 * A representation for syntactic errors encountered during parsing. It contains
 * all sufficient details to be able to trace the offending token, in order to
 * inform the user how to correct the offending query. This type of error is
 * generated by Antlr itself.
 * 
 */
public interface GmqlSyntacticParsingError extends GmqlParsingError{

	EntityType<GmqlSyntacticParsingError> T = EntityTypes.T(GmqlSyntacticParsingError.class);

	int getLineNumber();
	void setLineNumber(int value);
	
	int getCharacterPostionInLine();
	void setCharacterPostionInLine(int value);
	
	Object getOffendingToken();
	void setOffendingToken(Object value);
	
	List<String> getRuleInvocationStack();
	void setRuleInvocationStack(List<String> value);
}
